// Sistema de Internacionaliza√ß√£o - Fibonacci Turbine Simulator
class I18n {
    constructor() {
        this.currentLanguage = 'pt';
        this.translations = {
            pt: {
                // T√≠tulo e cabe√ßalhos
                title: 'Turbina de Fibonacci - Simulador 3D',
                controls: 'Controles',
                electricalGeneration: 'Gera√ß√£o El√©trica',
                mechanicalStructure: 'Estrutura Mec√¢nica',
                fibonacciInfo: 'Informa√ß√µes de Fibonacci',
                
                // Controles
                blades: 'N√∫mero de P√°s',
                diameter: 'Di√¢metro (m)',
                length: 'Comprimento (m)',
                windSpeed: 'Velocidade do Vento (km/h)',
                helicalAngle: '√Çngulo Helicoidal (¬∞)',
                
                // Gera√ß√£o El√©trica
                voltage: 'Tens√£o',
                power: 'Pot√™ncia',
                current: 'Corrente',
                rpm: 'RPM',
                frequency: 'Frequ√™ncia',
                sweepArea: '√Årea de Varredura',
                shaftDiameter: 'Di√¢metro do Eixo',
                motorForce: 'For√ßa do Motor',
                efficiency: 'Efici√™ncia',
                
                // Estrutura Mec√¢nica
                totalMass: 'Massa Total',
                momentInertia: 'Momento de In√©rcia',
                centerMass: 'Centro de Massa',
                structuralStress: 'Tens√£o Estrutural',
                
                // Fibonacci
                sequence: 'Sequ√™ncia de Fibonacci',
                goldenRatio: 'Raz√£o √Åurea (œÜ)',
                goldenAngle: '√Çngulo √Åureo',
                
                // Controles de ajuda
                controlsHelp: 'Controles',
                dragToRotate: 'üñ±Ô∏è Arraste para rotacionar',
                scrollToZoom: 'üîç Scroll para zoom',
                autoAnimation: '‚ö° Anima√ß√£o autom√°tica',
                helixAngle: '√Çngulo Helicoidal (¬∞)',
                
                // Unidades
                volts: 'V',
                watts: 'W',
                amperes: 'A',
                hertz: 'Hz',
                squareMeters: 'm¬≤',
                meters: 'm',
                newtons: 'N',
                percent: '%',
                kilograms: 'kg',
                kgSquareMeters: 'kg‚ãÖm¬≤',
                pascals: 'Pa'
            },
            
            en: {
                // Title and headers
                title: 'Fibonacci Turbine - 3D Simulator',
                controls: 'Controls',
                electricalGeneration: 'Electrical Generation',
                mechanicalStructure: 'Mechanical Structure',
                fibonacciInfo: 'Fibonacci Information',
                
                // Controls
                blades: 'Number of Blades',
                diameter: 'Diameter (m)',
                length: 'Length (m)',
                windSpeed: 'Wind Speed (km/h)',
                helicalAngle: 'Helical Angle (¬∞)',
                
                // Electrical Generation
                voltage: 'Voltage',
                power: 'Power',
                current: 'Current',
                rpm: 'RPM',
                frequency: 'Frequency',
                sweepArea: 'Sweep Area',
                shaftDiameter: 'Shaft Diameter',
                motorForce: 'Motor Force',
                efficiency: 'Efficiency',
                
                // Mechanical Structure
                totalMass: 'Total Mass',
                momentInertia: 'Moment of Inertia',
                centerMass: 'Center of Mass',
                structuralStress: 'Structural Stress',
                
                // Fibonacci
                sequence: 'Fibonacci Sequence',
                goldenRatio: 'Golden Ratio (œÜ)',
                goldenAngle: 'Golden Angle',
                
                // Help controls
                controlsHelp: 'Controls',
                dragToRotate: 'üñ±Ô∏è Drag to rotate',
                scrollToZoom: 'üîç Scroll to zoom',
                autoAnimation: '‚ö° Auto animation',
                helixAngle: 'Helical Angle (¬∞)',
                
                // Units
                volts: 'V',
                watts: 'W',
                amperes: 'A',
                hertz: 'Hz',
                squareMeters: 'm¬≤',
                meters: 'm',
                newtons: 'N',
                percent: '%',
                kilograms: 'kg',
                kgSquareMeters: 'kg‚ãÖm¬≤',
                pascals: 'Pa'
            },
            
            es: {
                // T√≠tulo y encabezados
                title: 'Turbina de Fibonacci - Simulador 3D',
                controls: 'Controles',
                electricalGeneration: 'Generaci√≥n El√©ctrica',
                mechanicalStructure: 'Estructura Mec√°nica',
                fibonacciInfo: 'Informaci√≥n de Fibonacci',
                
                // Controles
                blades: 'N√∫mero de Palas',
                diameter: 'Di√°metro (m)',
                length: 'Longitud (m)',
                windSpeed: 'Velocidad del Viento (km/h)',
                helicalAngle: '√Ångulo Helicoidal (¬∞)',
                
                // Generaci√≥n El√©ctrica
                voltage: 'Voltaje',
                power: 'Potencia',
                current: 'Corriente',
                rpm: 'RPM',
                frequency: 'Frecuencia',
                sweepArea: '√Årea de Barrido',
                shaftDiameter: 'Di√°metro del Eje',
                motorForce: 'Fuerza del Motor',
                efficiency: 'Eficiencia',
                
                // Estructura Mec√°nica
                totalMass: 'Masa Total',
                momentInertia: 'Momento de Inercia',
                centerMass: 'Centro de Masa',
                structuralStress: 'Tensi√≥n Estructural',
                
                // Fibonacci
                sequence: 'Secuencia de Fibonacci',
                goldenRatio: 'Raz√≥n √Åurea (œÜ)',
                goldenAngle: '√Ångulo √Åureo',
                
                // Controles de ayuda
                controlsHelp: 'Controles',
                dragToRotate: 'üñ±Ô∏è Arrastra para rotar',
                scrollToZoom: 'üîç Scroll para zoom',
                autoAnimation: '‚ö° Animaci√≥n autom√°tica',
                helixAngle: '√Ångulo Helicoidal (¬∞)',
                
                // Unidades
                volts: 'V',
                watts: 'W',
                amperes: 'A',
                hertz: 'Hz',
                squareMeters: 'm¬≤',
                meters: 'm',
                newtons: 'N',
                percent: '%',
                kilograms: 'kg',
                kgSquareMeters: 'kg‚ãÖm¬≤',
                pascals: 'Pa'
            }
        };
    }
    
    // Obter tradu√ß√£o
    t(key) {
        return this.translations[this.currentLanguage][key] || key;
    }
    
    // Mudar idioma
    setLanguage(lang) {
        if (this.translations[lang]) {
            this.currentLanguage = lang;
            this.updateInterface();
            localStorage.setItem('turbine-language', lang);
        }
    }
    
    // Obter idioma atual
    getCurrentLanguage() {
        return this.currentLanguage;
    }
    
    // Carregar idioma salvo
    loadSavedLanguage() {
        const saved = localStorage.getItem('turbine-language');
        if (saved && this.translations[saved]) {
            this.currentLanguage = saved;
        }
    }
    
    // Atualizar interface
    updateInterface() {
        // Atualizar t√≠tulo da p√°gina
        document.title = this.t('title');
        
        // Atualizar elementos com data-i18n
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.getAttribute('data-i18n');
            element.textContent = this.t(key);
        });
        
        // Atualizar placeholders e labels espec√≠ficos
        this.updateSpecificElements();
    }
    
    // Atualizar elementos espec√≠ficos
    updateSpecificElements() {
        // Atualizar labels dos controles
        const controlLabels = {
            'blades-label': 'blades',
            'diameter-label': 'diameter',
            'length-label': 'length',
            'wind-speed-label': 'windSpeed',
            'helical-angle-label': 'helicalAngle'
        };
        
        Object.entries(controlLabels).forEach(([id, key]) => {
            const element = document.getElementById(id);
            if (element) element.textContent = this.t(key);
        });
    }
}

// Inst√¢ncia global
const i18n = new I18n();